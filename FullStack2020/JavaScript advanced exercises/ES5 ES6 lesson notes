// let + const  let replaces/is the new var

const player = 'bobby';
let experience = 100;
let wizardLevel = false;

if (experience > 90) {
    let wizardLevel = true;
}

// use const to assign a variable that will never change

const obj = {
    player: 'bobby',
    experience: 100,
    wizardLevel: false
}

const { player, experience } = obj;
let { wizardLevel } = obj;

// object properties

const name = 'john snow';

cost obj = {
    [name]: 'hello',
    ['ray' + 'smith']: 'hihi'
}

// template strings

const name = "sally";
const age = 34;
const pet = "horse";
//old way for comparison 
//const greeting = "Hello " + name + " you seem to be doing " + greeting + "!"
// new way
const greetingBest = `Hello ${name} you seem to be ${age-10}. what a lovely ${pet} you have!`;

// default arguments

function greet(name='', age = 30, pet = 'cat') {
    return `Hello ${name} you seem to be ${age-10}. what a lovely ${pet} you have!`;
}

// symbol  is rare

let sym1 = Symbol();
let sym2 = Symbol('foo');
let sym3 = Symbol('foo');

// arrow functions =>

// old way
function add(a,b) {
    return a+ b;
}
//new way
const add = (a,b) => a + b;